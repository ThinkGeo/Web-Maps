@using ThinkGeo.MapSuite.Mvc
@using ThinkGeo.MapSuite
@using ThinkGeo.MapSuite.Drawing
@using ThinkGeo.MapSuite.Layers
@using ThinkGeo.MapSuite.Shapes
@using ThinkGeo.MapSuite.Styles
@model ThinkGeo.MapSuite.Mvc.Map 
<div class="four columns" id="navigation">
    @{Html.RenderPartial("SourceCode");}
    <div id="instrux-body">
        <div id="instrux-text">
            This sample specifies how to work with MSSQL2008FeatureLayer.<br />
            <span class="warning">(Please modify the visible property of the map in .cshtml file
                if you load the map from MsSQL2008 using following code.) </span>
        </div>
    </div>
</div>
<script type="text/javascript" src="../../Scripts/MicrosoftAjax.js"></script>
<div class="sixteen columns" id="main">
    <div id="map">
        <img alt="map" width="99%"
height="98%" src="@Url.Content("~/Content/images/MapView.jpg")" />
        <!--Todo: Please uncomment the code below and modify the the connection string to load your own layer. -->
        @*
   @{Html.ThinkGeo().Map("Map1", new System.Web.UI.WebControls.Unit(100, System.Web.UI.WebControls.UnitType.Percentage), 510)
           .MapBackground(new GeoSolidBrush(GeoColor.GeographicColors.ShallowOcean))
          .MapUnit(GeographyUnit.DecimalDegree)
          .CurrentExtent(-140, 60, 140, -60)
          .StaticOverlay(overlay =>
          {
              string connectString = "User ID=userid;Password=password;Data Source=192.168.0.178/orcl;";
              MsSql2008FeatureLayer sql2008Layer = new MsSql2008FeatureLayer(connectString, "states", "recid");
              sql2008Layer.ZoomLevelSet.ZoomLevel01.DefaultAreaStyle = AreaStyles.CreateSimpleAreaStyle(GeoColor.FromArgb(255, 233, 232, 214), GeoColor.FromArgb(255, 118, 138, 69));
              sql2008Layer.ZoomLevelSet.ZoomLevel01.ApplyUntilZoomLevel = ApplyUntilZoomLevel.Level20;

              overlay.Layer("Sql2008Layer", sql2008Layer);
          }).Render();}
*@
    </div>
</div>
