@using ThinkGeo.MapSuite
@using ThinkGeo.MapSuite.Drawing
@using ThinkGeo.MapSuite.Layers
@using ThinkGeo.MapSuite.Shapes
@using ThinkGeo.MapSuite.Styles
@using ThinkGeo.MapSuite.Mvc
<script language="javascript" type="text/javascript">
    function clientExtentChanged(e) {
        var lbCurrentScaleObj = document.getElementById("lbCurrentScale");
        var dataContainerObj = document.getElementById("dataContainer");
        dataContainerObj.style.display = "";

        lbCurrentScaleObj.innerHTML = Map1.getScale();
        var extent = Map1.getExtent();
        var extentStr = extent.toString();

        var extentStrArray = extentStr.split(",");

        var resultString = "";
        var divExtentObj = document.getElementById("divExtent");
        divExtentObj.innerHTML = "";
        for(var i = 0; i < extentStrArray.length; i++)
        {
            if(i == (extentStrArray.length - 1))
            {
                resultString += extentStrArray[i];
            }
            else
            {
                resultString += extentStrArray[i] + ",<br/>";
            }
        }
        divExtentObj.innerHTML = resultString;
    }
</script>
<div class="four columns" id="navigation">
    @{Html.RenderPartial("SourceCode");}
    <div id="instrux-body">
        <div id="instrux-text">
            <p>
                Pan or zoom the map to see the CurrentScale and CurrentExtent changed.
            </p>
            <div id="dataContainer" style="display: none;">
                <b>CurrentScale:</b><br />
                <label id="lbCurrentScale">
                </label>
                <br />
                <br />
                <b>CurrentExtent:</b>(left, top, right, bottom)<br />
                <div id="divExtent" style="width: 210px;" class="data">
                </div>
            </div>
        </div>
    </div>
</div>
<div class="sixteen columns" id="main">
    <div>
        @{
            Html.ThinkGeo().Map("Map1", new System.Web.UI.WebControls.Unit(100, System.Web.UI.WebControls.UnitType.Percentage), 760)
              .MapBackground(new GeoSolidBrush(GeoColor.FromHtml("#E5E3DF")))
              .MapUnit(GeographyUnit.Meter)
              .ZoomLevelSet(new ThinkGeoCloudMapsZoomLevelSet())
              .CurrentExtent(-14607343.5818934, 7371576.14679691, -6014592.08756057, 1910351.0222467)
              .CustomOverlays(overlay =>
              {
                  // Please input your ThinkGeo Cloud API Key to enable the background map.
                  overlay.ThinkGeoCloudRasterMapsOverlay("ThinkGeoCloudMaps", "ThinkGeo Cloud API Key");
              })
              .OnClientExtentChanged("clientExtentChanged")
              .Render();
        }
    </div>
</div>
