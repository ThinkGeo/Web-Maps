@using ThinkGeo.MapSuite.Mvc
@using ThinkGeo.MapSuite
@using ThinkGeo.MapSuite.Drawing
@using ThinkGeo.MapSuite.Layers
@using ThinkGeo.MapSuite.Shapes
@using ThinkGeo.MapSuite.Styles
<script language="javascript" type="text/javascript">
    function btnBuffer_Click() {
        Map1.ajaxCallAction("InteractiveOverlays", "BufferFeature", null, callback);
    }
    function callback(result) {
        Map1.redrawLayer("BufferLayerOverLayer");
    }
</script>
<div class="four columns" id="navigation">
    @{Html.RenderPartial("SourceCode");}
    <div id="instrux-body">
        <div id="instrux-text">
            Click the button to draw a buffer around the feature.<br />
            <input type="button" id="btnBuffer" name="btnBuffer" value="Buffer" onclick="btnBuffer_Click();" />
        </div>
    </div>
</div>
<div class="sixteen columns" id="main">
    @{
        Html.ThinkGeo().Map("Map1", new System.Web.UI.WebControls.Unit(100, System.Web.UI.WebControls.UnitType.Percentage), 760)
            .MapBackground(new GeoSolidBrush(GeoColor.FromHtml("#E5E3DF")))
            .MapUnit(GeographyUnit.Meter)
            .ZoomLevelSet(new ThinkGeoCloudMapsZoomLevelSet())
            .CurrentExtent(-14607343.5818934, 7371576.14679691, -6014592.08756057, 1910351.0222467)
            .CustomOverlays(overlays =>
            {
                // Please input your ThinkGeo Cloud API Key to enable the background map.
                overlays.ThinkGeoCloudRasterMapsOverlay("ThinkGeoCloudMaps", "ThinkGeo Cloud API Key");

                InMemoryFeatureLayer mapShapeLayer = new InMemoryFeatureLayer();
                mapShapeLayer.ZoomLevelSet.ZoomLevel01.DefaultAreaStyle.FillSolidBrush.Color = GeoColor.FromArgb(150, 60, 180, 60);
                mapShapeLayer.ZoomLevelSet.ZoomLevel01.DefaultAreaStyle.OutlinePen.Color = GeoColor.GeographicColors.DeepOcean;
                mapShapeLayer.ZoomLevelSet.ZoomLevel01.ApplyUntilZoomLevel = ApplyUntilZoomLevel.Level20;
                mapShapeLayer.InternalFeatures.Add("POLYGON", new Feature(BaseShape.CreateShapeFromWellKnownData("POLYGON((-12190788.7671462 4089686.76137006,-12190788.7671462 5302895.27431239,-10067673.8694971 5302895.27431239,-10067673.8694971 4089686.76137006,-12190788.7671462 4089686.76137006))")));

                InMemoryFeatureLayer bufferLayer = new InMemoryFeatureLayer();
                bufferLayer.ZoomLevelSet.ZoomLevel01.DefaultAreaStyle.FillSolidBrush.Color = GeoColor.FromArgb(100, 200, 255, 200);
                bufferLayer.ZoomLevelSet.ZoomLevel01.DefaultAreaStyle.OutlinePen.Color = GeoColor.StandardColors.LightGreen;
                bufferLayer.ZoomLevelSet.ZoomLevel01.ApplyUntilZoomLevel = ApplyUntilZoomLevel.Level20;

                overlays.LayerOverlay("BufferLayerOverLayer").TileType(TileType.SingleTile).IsBaseOverlay(false).Layer("InMemoryFeatureLayer", mapShapeLayer)
                    .Layer("BufferLayer", bufferLayer);

            })
            .Render();
    }
</div>
