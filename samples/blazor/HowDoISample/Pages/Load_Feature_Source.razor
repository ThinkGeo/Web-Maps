@page "/load-feature-source"
@using ThinkGeo.Core

<MapView @ref="_thisMapView" Id="demomap" MapUnit="ThinkGeo.Core.GeographyUnit.Meter" Zoom="15" Width="800" Height="600"
         Center="@(new PointShape(-253382.80457225442, 6700009.268913746))">

    <OverlaysSetting>
        <LayerOverlay Id="BaseMapLayerOverlay" TileHeight="512" TileWidth="512" Layers="@_baseMapLayer"></LayerOverlay>

        <LayerOverlay Id="VehicleLayerOverlay" TileWidth="512" TileHeight="512" Layers="@_vehicleLayers"></LayerOverlay>
    </OverlaysSetting>
</MapView>

@code {
    private MapView _thisMapView;
    private GeoCollection<Layer> _baseMapLayer;
    private GeoCollection<Layer> _vehicleLayers;
    private InMemoryFeatureLayer vehicleShapesLayer;

    protected override void OnInitialized()
    {
        _baseMapLayer = new GeoCollection<Layer>();
        _vehicleLayers = new GeoCollection<Layer>();

        _baseMapLayer = new GeoCollection<Layer>()
        {
            new GeoTiffRasterLayer(Path.Combine(Directory.GetCurrentDirectory(), "wwwroot", "map.tif"))
        };


        vehicleShapesLayer = new InMemoryFeatureLayer(new Collection<FeatureSourceColumn>()
            {
                new FeatureSourceColumn("VehicleName"),
                new FeatureSourceColumn("Heading"),
            },
        new Collection<BaseShape>());

        // Retrieves the different vehicle arrow point styles
        // --------------------------------------------------
        ICollection<PointStyle> arrowHeadingPointStylesFrom15to18 = InitializeArrowPointHeadingStyles(18);
        ICollection<PointStyle> arrowHeadingPointStylesFrom18to20 = InitializeArrowPointHeadingStyles(26);


        // Adds the correct point style associated with the vehicle heading
        // ----------------------------------------------------------------

        ClassBreakStyle arrowTypeStyleZoom15 = new ClassBreakStyle("Heading");
        int angleIncrement = 0;

        foreach (PointStyle arrowHeadingStyle in arrowHeadingPointStylesFrom15to18)
        {
            arrowTypeStyleZoom15.ClassBreaks.Add(new ClassBreak(value: angleIncrement, pointStyle: arrowHeadingStyle));
            angleIncrement += 10;
        }


        ClassBreakStyle arrowTypeStyleZoom18 = new ClassBreakStyle("Heading");
        angleIncrement = 0;

        foreach (PointStyle arrowHeadingStyle in arrowHeadingPointStylesFrom18to20)
        {
            arrowTypeStyleZoom18.ClassBreaks.Add(new ClassBreak(value: angleIncrement, pointStyle: arrowHeadingStyle));
            angleIncrement += 10;
        }


        TextStyle vehicleLabelStyle = TextStyle.CreateSimpleTextStyle("VehicleName", "Interstate", 16, DrawingFontStyles.Regular, GeoColors.White, GeoColors.Gray, 0, 0, 12);
        vehicleLabelStyle.Mask = AreaStyle.CreateSimpleAreaStyle(GeoColor.FromArgb(170, GeoColor.FromHtml("#000000")), GeoColor.FromHtml("#FFFFFF"), 1);
        vehicleLabelStyle.MaskType = MaskType.Rectangle;
        vehicleLabelStyle.MaskMargin = new DrawingMargin(2, 2, 2, 2);
        vehicleLabelStyle.OverlappingRule = LabelOverlappingRule.AllowOverlapping;
        vehicleLabelStyle.DrawingLevel = DrawingLevel.LabelLevel;



        // Only display between zoom levels 16 & 20
        // ----------------------------------------
        vehicleShapesLayer.ZoomLevelSet.ZoomLevel16.CustomStyles.Add(vehicleLabelStyle);
        vehicleShapesLayer.ZoomLevelSet.ZoomLevel16.CustomStyles.Add(arrowTypeStyleZoom15);
        vehicleShapesLayer.ZoomLevelSet.ZoomLevel16.ApplyUntilZoomLevel = ApplyUntilZoomLevel.Level18;

        vehicleShapesLayer.ZoomLevelSet.ZoomLevel18.CustomStyles.Add(vehicleLabelStyle);
        vehicleShapesLayer.ZoomLevelSet.ZoomLevel18.CustomStyles.Add(arrowTypeStyleZoom18);
        vehicleShapesLayer.ZoomLevelSet.ZoomLevel18.ApplyUntilZoomLevel = ApplyUntilZoomLevel.Level20;
        _vehicleLayers.Add(vehicleShapesLayer);


        // Add sample feature point

        Feature latestPositionFeature = new Feature(-253382.80457225442, 6700009.268913746, "Test");
        latestPositionFeature.ColumnValues["VehicleName"] = "VHC" + "123";
        latestPositionFeature.ColumnValues["Heading"] = "0";  // This rotates the png due to the class break style
        vehicleShapesLayer.InternalFeatures.Add(latestPositionFeature.Id, latestPositionFeature);        
    }

    private static ICollection<PointStyle> InitializeArrowPointHeadingStyles(float symbolSize)
    {
        ICollection<PointStyle> arrowHeadingPointStyles = new Collection<PointStyle>();
        int angleIncrement = 0;

        for (int i = 0; i < 36; i++)
        {
            PointStyle arrowPointStyle = new PointStyle
                {
                    PointType = PointType.Image,
                    RotationAngle = 360 - angleIncrement,
                    Image = new GeoImage(Path.Combine(Directory.GetCurrentDirectory(), "wwwroot", "inProgressVehicleArrow.png")),
                    SymbolSize = symbolSize,
                    DrawingLevel = DrawingLevel.LevelFour
                };

            arrowHeadingPointStyles.Add(arrowPointStyle);
            angleIncrement += 10;
        }

        return arrowHeadingPointStyles;
    }

}
