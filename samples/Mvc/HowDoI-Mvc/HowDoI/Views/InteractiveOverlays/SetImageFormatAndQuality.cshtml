@using ThinkGeo.MapSuite.Mvc;
@using ThinkGeo.MapSuite
@using ThinkGeo.MapSuite.Drawing
@using ThinkGeo.MapSuite.Layers
@using ThinkGeo.MapSuite.Shapes
@using ThinkGeo.MapSuite.Styles;
@model ThinkGeo.MapSuite.Mvc.Map
<script language="javascript" type="text/javascript">
    function selectddImageFormat(optionObj) {
        var imageType = optionObj.value;
        var imageQuality = document.getElementById("ddJpegQuality").value;

        Map1.ajaxCallAction("InteractiveOverlays", "SetImageFormat", { quality: imageQuality }, jpegQualityCallback);

        if ("Png" == imageType) {
            document.getElementById("ddJpegQuality").style.display = "none";
        }
        else {
            document.getElementById("ddJpegQuality").style.display = "";
        }
    }

    function selectddJpegQuality(optionObj) {
        var imageQuality = optionObj.value;

        Map1.ajaxCallAction("InteractiveOverlays", "SetImageFormatAndQuality", { quality: imageQuality }, jpegQualityCallback);
    }

    function jpegQualityCallback(result) {
        Map1.redrawLayer("mapOverlay");
    }
</script>
<div class="four columns" id="navigation">
    @{Html.RenderPartial("SourceCode");}
    <div id="instrux-body">
        <div id="instrux-text">
            This sample simply sets the format and quality of the map image.
            <br />
            <br />
            Please select the image format:<br />
            <select id="ddImageFormat" name="ddImageFormat" onchange="selectddImageFormat(this)">
                <option selected="selected" value="Png">Png</option>
                <option value="Jpeg">Jpeg</option>
            </select>
            <select id="ddJpegQuality" name="ddJpegQuality" onchange="selectddJpegQuality(this)"
                style="display: none;">
                <option value="100">100</option>
                <option value="90">90</option>
                <option value="80">80</option>
                <option value="70">70</option>
                <option value="60">60</option>
                <option value="50">50</option>
                <option value="40">40</option>
                <option value="30">30</option>
                <option value="20">20</option>
                <option value="10">10</option>
            </select>
        </div>
    </div>
</div>
<div class="sixteen columns" id="main">
    @{
        Html.ThinkGeo().Map(Model).MapUnit(GeographyUnit.DecimalDegree)
            .CurrentExtent(-131.22, 55.05, -54.03, 16.91)
            .MapBackground(new GeoSolidBrush(GeoColor.FromHtml("#E5E3DF")))
            .MapTools(tools => {
                tools.LoadingImageMapTool().Enabled(true);
            })
            .Render();
    }
</div>
