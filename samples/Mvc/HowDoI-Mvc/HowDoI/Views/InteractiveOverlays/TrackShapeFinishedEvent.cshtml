@using ThinkGeo.MapSuite.Mvc
@using ThinkGeo.MapSuite
@using ThinkGeo.MapSuite.Drawing
@using ThinkGeo.MapSuite.Layers
@using ThinkGeo.MapSuite.Shapes
@using ThinkGeo.MapSuite.Styles
@using System.Configuration;
<script language="javascript" type="text/javascript">
    function trackShapeFinished(e) {
        Map1.ajaxCallAction("InteractiveOverlays", "UpdateEditedShape", { 'features': e.features }, function (result) {
            Map1.redrawLayer("ShapeOverlay");
            Map1.clearEditingFeatures();
        });
    }
</script>
<div class="four columns" id="navigation">
    @{Html.RenderPartial("SourceCode");}
    <div id="instrux-body">
        <div id="instrux-text">
            Try to click buttons below to draw different shapes at client.
            <br />
            <br />
            <input id="buttonNormal" type="image" title="Normal Mode" src="@Url.Content("~/Content/images/Cursor.png")"
            onclick="Map1.setDrawMode('Normal');return false;" />
            <input id="buttonDrawPoint" type="image" title="Draw Point" src="@Url.Content("~/Content/images/point28.png")"
            onclick="Map1.setDrawMode('Point');return false;" />
            <input id="buttonDrawLine" type="image" title="Draw Line" src="@Url.Content("~/Content/images/line28.png")"
            onclick="Map1.setDrawMode('Line');return false;" />
            <input id="buttonDrawRectangle" type="image" title="Draw Rectangle" src="@Url.Content("~/Content/images/rectangle28.png")"
            onclick="Map1.setDrawMode('Rectangle');return false;" />
            <input id="buttonDrawSquare" type="image" onclick="Map1.setDrawMode('Square');return false;"
            title="Draw Square" src="@Url.Content("~/Content/images/square28.png")" />
            <input id="buttonDrawPolygon" type="image" title="Draw Polygon" src="@Url.Content("~/Content/images/polygon28.png")"
            onclick="Map1.setDrawMode('Polygon');return false;" />
            <input id="buttonDrawCircle" type="image" title="Draw Circle" src="@Url.Content("~/Content/images/circle28.png")"
            onclick="Map1.setDrawMode('Circle');return false;" />
            <input id="buttonDrawEllipse" type="image" title="Draw Ellipse" src="@Url.Content("~/Content/images/ellipse28.png")"
            onclick="Map1.setDrawMode('Ellipse');return false;" />
        </div>
    </div>
</div>
<div class="sixteen columns" id="main">
    <div>
        @{Html.ThinkGeo().Map("Map1", new System.Web.UI.WebControls.Unit(100, System.Web.UI.WebControls.UnitType.Percentage), 760)
          .MapBackground(new GeoSolidBrush(GeoColor.FromHtml("#E5E3DF")))
          .MapUnit(GeographyUnit.Meter)
          .ZoomLevelSet(new ThinkGeoCloudMapsZoomLevelSet())
          .CurrentExtent(-14607343.5818934, 7371576.14679691, -6014592.08756057, 1910351.0222467)
          .OnClientTrackShapeFinished("trackShapeFinished")
          .CustomOverlays(overlays =>
              {
                  // Please input your ThinkGeo Cloud API Key to enable the background map.
                  overlays.ThinkGeoCloudRasterMapsOverlay("ThinkGeoCloudMaps", "ThinkGeo Cloud API Key");

                  InMemoryFeatureLayer shapeLayer = new InMemoryFeatureLayer();
                  shapeLayer.ZoomLevelSet.ZoomLevel01.DefaultPointStyle = PointStyles.CreateSimpleCircleStyle(GeoColor.FromArgb(180, 102, 255, 102), 10, GeoColor.StandardColors.DarkGreen, 1);
                  shapeLayer.ZoomLevelSet.ZoomLevel01.DefaultLineStyle = LineStyles.CreateSimpleLineStyle(GeoColor.StandardColors.Green, 4, true);
                  shapeLayer.ZoomLevelSet.ZoomLevel01.DefaultAreaStyle = AreaStyles.CreateSimpleAreaStyle(GeoColor.FromArgb(180, 102, 255, 102), GeoColor.StandardColors.DarkGreen, 1);
                  shapeLayer.ZoomLevelSet.ZoomLevel01.ApplyUntilZoomLevel = ApplyUntilZoomLevel.Level20;

                  overlays.LayerOverlay("ShapeOverlay").IsBaseOverlay(false).Layer(shapeLayer);
              })
          .Render();}
    </div>
</div>
