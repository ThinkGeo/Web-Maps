@using ThinkGeo.MapSuite.Mvc
@using ThinkGeo.MapSuite
@using ThinkGeo.MapSuite.Drawing
@using ThinkGeo.MapSuite.Layers
@using ThinkGeo.MapSuite.Shapes
@using ThinkGeo.MapSuite.Styles
@using System.Collections.ObjectModel;
@using ZedGraph;
<div class="four columns" id="navigation">
    @{Html.RenderPartial("SourceCode");}
    <div id="instrux-body">
        <div id="instrux-text">
            <p>
                We used a regular expression to draw the countries differently that have the string
                “land” in them such as Greenland.
            </p>
            <label id="label1">
                Regular Expression:</label>
            <input type="text" id="regularExpressionTextBox" value=".*land" disabled="disabled" />
        </div>
    </div>
</div>
<div class="sixteen columns" id="main">
    <div>
        @{
            Html.ThinkGeo().Map("Map1", new System.Web.UI.WebControls.Unit(100, System.Web.UI.WebControls.UnitType.Percentage), 760)
                .MapBackground(new GeoSolidBrush(GeoColor.FromHtml("#E5E3DF")))
                .MapUnit(GeographyUnit.Meter)
                .ZoomLevelSet(new ThinkGeoCloudMapsZoomLevelSet())
                .CurrentExtent(-11020629.5885341, 21396567.2524054, 8571600.79108207, -3632749.14338443)
                .CustomOverlays(overlays =>
                {
                    // Please input your ThinkGeo Cloud API Key to enable the background map.
                    overlays.ThinkGeoCloudRasterMapsOverlay("ThinkGeoCloudMaps", "ThinkGeo Cloud API Key");

                    ShapeFileFeatureLayer worldLayer = new ShapeFileFeatureLayer(Server.MapPath("~/App_Data/cntry02_3857.shp"));
                    worldLayer.ZoomLevelSet.ZoomLevel01.CustomStyles.Add(AreaStyles.CreateSimpleAreaStyle(GeoColor.SimpleColors.Transparent, GeoColor.FromArgb(100, GeoColor.SimpleColors.Green)));
                    worldLayer.ZoomLevelSet.ZoomLevel01.ApplyUntilZoomLevel = ApplyUntilZoomLevel.Level20;

                    // Draw features based on regular expression
                    RegexStyle regexStyle = new RegexStyle();
                    regexStyle.ColumnName = "CNTRY_NAME";
                    regexStyle.RegexItems.Add(new RegexItem(".*land", new AreaStyle(new GeoSolidBrush(GeoColor.StandardColors.LightGreen))));
                    worldLayer.ZoomLevelSet.ZoomLevel01.CustomStyles.Add(regexStyle);
                    overlays.LayerOverlay().IsBaseOverlay(false).Layer("WorldLayer", worldLayer);
                })
                .Render();
        }
    </div>
</div>
